{"version":3,"sources":["components/Header.jsx","words/newWords.js","components/Jumble.jsx","components/BoardInput.jsx","components/BoardHeader.jsx","components/GameOver.jsx","components/MainBoard.jsx","components/Footer.jsx","Layout.js","index.js"],"names":["Header","className","wordList","word","definition","Jumble","useState","shuffle","split","join","toUpperCase","jumble","setJumble","useEffect","BoardInput","handleChange","answer","playRound","type","onChange","value","onClick","e","BoardHeader","score","GameOver","MainBoard","words","setWords","_","sample","setWord","setAnswer","setScore","length","target","preventDefault","toLowerCase","filter","entry","Footer","Layout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b1d0f75.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/Header.css\";\r\n\r\nfunction Header() {\r\n  return <header className=\"site-header\">Word Jamble</header>;\r\n}\r\n\r\nexport default Header;\r\n","export const wordList =\r\n[\r\n  { word: \"acquire\", definition: \"Obtain, get gain \"},\r\n  { word: \"acquisition\", definition: \"Achievement, purchase, possession, asset\"},\r\n  { word: \"argument\", definition: \"Quarrel, disagreement, case, reasoning, contention\"},\r\n  { word: \"assumption\", definition: \"Statement guess theory belief\"},\r\n  { word: \"coordinate\", definition: \"Organize, direct, manage, bring together\"},\r\n  { word: \"dialect\", definition: \"Language, talk, idiom\"},\r\n  { word: \"editorial\", definition: \"Viewpoint, perspective, position, point of view\"},\r\n  { word: \"etiquette\", definition: \"Manners, good manners, protocol\"},\r\n  { word: \"expository\", definition: \"Explanation, account\"},\r\n  { word: \"figurative\", definition: \"Metaphoric, abstract\"},\r\n  { word: \"literal\", definition: \"Factual, truthful, exact, word by word, verbatim\"},\r\n  { word: \"inconsistency\", definition: \"Not in agreement, conflicting, unpredictable, shifting, unreliable, erratic\"},\r\n  { word: \"jargon\", definition: \"Terminology, slang, lingo\"},\r\n  { word: \"modify\", definition: \"Alteration, change, adjustment\"},\r\n  { word: \"projection\", definition: \"Outcrop, bulge, forecast, prediction\"},\r\n  { word: \"slant\", definition: \"Angle, viewpoint, attitude, point of view\"},\r\n  { word: \"slang\", definition: \"Informal usage, playful language or idioms\"},\r\n  { word: \"stereotype\", definition: \"Typecast, label\"},\r\n  { word: \"subordinate\", definition: \"Secondary, lesser, inferior, assistant, junior, underling\"},\r\n  { word: \"transition\", definition: \"Change, evolution, shift, alteration, transfer\"},\r\n  { word: \"inflection\", definition: \"Nuance, variation, variety\"},\r\n  { word: \"collaboration\", definition: \"Teamwork, partnership, group, effort\"},\r\n  { word: \"clarify\", definition: \"Make clear, explain, spell out, simplify, refine, purify, filter\"},\r\n  { word: \"exponent\", definition: \"Advocate, supporter, example, model, interpreter, explainer\"},\r\n  { word: \"ratio\", definition: \"Relation, relative amount, percentage\"},\r\n  { word: \"proportion\", definition: \"Amount ,quantity, ratio, comparison, relationship\"},\r\n  { word: \"discord\", definition: \"Disagreement, conflict, dispute, disharmony, friction\"},\r\n  { word: \"adapt\", definition: \"Version, edition, alteration, change\"},\r\n  { word: \"approximate\", definition: \"Estimated, fairly accurate, rough, near, ballpark\"},\r\n  { word: \"transformation\", definition: \"Alteration, change, conversion, renovation\"},\r\n  { word: \"composition\", definition: \"Create, write, arrange, calm, settle down\"},\r\n  { word: \"objection\", definition: \"Opposition, protest, doubt\"},\r\n  { word: \"supported\", definition: \"Hold up, maintain, foundation, encourage, assist, backing\"},\r\n  { word: \"sequence\", definition: \"Chronological, in order\"},\r\n  { word: \"maintain\", definition: \"Uphold, preserve, argue, claim, look after, care for\"},\r\n  { word: \"promote\", definition: \"Endorse, encourage, advance, further advertise, campaign for\"},\r\n  { word: \"extensive\", definition: \"Widespread, wide-ranging, big, vast\"},\r\n  { word: \"formal\", definition: \"Procedure, requirement, reserve, stiffness\"},\r\n]\r\n","import { shuffle } from \"lodash\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"../styles/Jumble.css\";\r\n\r\nfunction Jumble({ word, definition }) {\r\n  const [jumble, setJumble] = useState(\r\n    shuffle(word.split(\"\")).join(\" \").toUpperCase()\r\n  );\r\n\r\n  useEffect(\r\n    () => setJumble(shuffle(word.split(\"\")).join(\" \").toUpperCase()),\r\n    [word]\r\n  );\r\n\r\n  return (\r\n    <div className=\"center-text\">\r\n      <h2 className=\"jumble\">{jumble}</h2>\r\n      <p className=\"hint-text\">{definition}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumble;\r\n","import \"../styles/BoardInput.css\";\r\n\r\nfunction BoardInput({ handleChange, answer, playRound }) {\r\n  return (\r\n    <form className=\"board-input\">\r\n      <input\r\n        className=\"main-input\"\r\n        type=\"text\"\r\n        onChange={handleChange}\r\n        value={answer}\r\n      />\r\n      <div className=\"button-container\">\r\n        <button onClick={(e) => playRound(e)}>Pass</button>\r\n        <button onClick={(e) => playRound(e)}>Enter</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default BoardInput;\r\n","import \"../styles/BoardHeader.css\";\r\n\r\nfunction BoardHeader({ score }) {\r\n  return (\r\n    <div className=\"board-header\">\r\n      <div className=\"header-cell\">Score: {score}</div>\r\n      <div className=\"header-cell\">Hint</div>\r\n      <div className=\"header-cell\">Grade: 5</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BoardHeader;\r\n","import \"../styles/GameOver.css\";\r\n\r\nfunction GameOver({ score }) {\r\n  return <h2>Round over! You scored {score} points!</h2>;\r\n}\r\n\r\nexport default GameOver;\r\n","import React, { useState } from \"react\";\r\nimport \"../styles/MainBoard.css\";\r\nimport _ from \"lodash\";\r\nimport { wordList } from \"../words/newWords.js\";\r\nimport Jumble from \"./Jumble\";\r\nimport BoardInput from \"./BoardInput\";\r\nimport BoardHeader from \"./BoardHeader\";\r\nimport GameOver from \"./GameOver\";\r\n\r\nfunction MainBoard() {\r\n  const [words, setWords] = useState(wordList);\r\n  const [word, setWord] = useState(_.sample(words));\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [score, setScore] = useState(0);\r\n\r\n  const handleChange = (e) => {\r\n    return setAnswer(e.target.value);\r\n  };\r\n\r\n  const playRound = (e) => {\r\n    e.preventDefault();\r\n    if (word.word.toLowerCase() === answer.toLowerCase()) {\r\n      setScore(score + 1);\r\n    }\r\n    // Keep an eye out if this allows a word to repeat a single time\r\n    // Looks like it probably is\r\n    setWords(words.filter((entry) => entry.word !== word.word));\r\n    setWord(_.sample(words));\r\n    setAnswer(\"\");\r\n  };\r\n\r\n  const checkGameOver = () => {\r\n    if (words.length < 1) return <GameOver score={score} />;\r\n\r\n    return <Jumble word={word.word} definition={word.definition} />;\r\n  };\r\n\r\n  return (\r\n    <main className=\"main-board\">\r\n      <BoardHeader score={score} />\r\n      {checkGameOver()}\r\n      <BoardInput\r\n        handleChange={handleChange}\r\n        answer={answer}\r\n        playRound={playRound}\r\n      />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default MainBoard;\r\n\r\n// <React.Fragment>\r\n// <Jumble word={word} />\r\n// <BoardInput\r\n//   handleChange={handleChange}\r\n//   answer={answer}\r\n//   playRound={playRound}\r\n// />\r\n// </React.Fragment>\r\n","import React from \"react\";\r\nimport \"../styles/Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"site-footer\">\r\n      Made by two mad lads for the Odin Game Jam\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import \"./Layout.css\";\r\nimport Header from \"./components/Header\";\r\nimport MainBoard from \"./components/MainBoard\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nfunction Layout() {\r\n  return (\r\n    <div className=\"Layout\">\r\n      <Header />\r\n      <MainBoard />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Layout from \"./Layout\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Layout />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}