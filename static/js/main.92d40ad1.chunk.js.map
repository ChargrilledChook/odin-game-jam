{"version":3,"sources":["components/Header.jsx","words/newWords.js","components/Jumble.jsx","components/BoardInput.jsx","components/BoardHeader.jsx","components/GameOver.jsx","components/MainBoard.jsx","components/Footer.jsx","Layout.js","index.js"],"names":["Header","className","wordList","word","definition","Jumble","useState","shuffle","split","join","toUpperCase","jumble","setJumble","useEffect","BoardInput","handleChange","answer","playRound","type","onChange","value","onClick","e","BoardHeader","score","GameOver","reset","MainBoard","words","setWords","_","sample","setWord","setAnswer","setScore","length","target","preventDefault","toLowerCase","filter","entry","Footer","Layout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92d40ad1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/Header.css\";\n\nfunction Header() {\n  return <header className=\"site-header\">Word Jamble</header>;\n}\n\nexport default Header;\n","export const wordList = [\n  { word: \"acquire\", definition: \"Obtain, get gain \" },\n  {\n    word: \"acquisition\",\n    definition: \"Achievement, purchase, possession, asset\",\n  },\n  {\n    word: \"argument\",\n    definition: \"Quarrel, disagreement, case, reasoning, contention\",\n  },\n  { word: \"assumption\", definition: \"Statement guess theory belief\" },\n  {\n    word: \"coordinate\",\n    definition: \"Organize, direct, manage, bring together\",\n  },\n  { word: \"dialect\", definition: \"Language, talk, idiom\" },\n  {\n    word: \"editorial\",\n    definition: \"Viewpoint, perspective, position, point of view\",\n  },\n  { word: \"etiquette\", definition: \"Manners, good manners, protocol\" },\n  { word: \"expository\", definition: \"Explanation, account\" },\n  { word: \"figurative\", definition: \"Metaphoric, abstract\" },\n  {\n    word: \"literal\",\n    definition: \"Factual, truthful, exact, word by word, verbatim\",\n  },\n  {\n    word: \"inconsistency\",\n    definition:\n      \"Not in agreement, conflicting, unpredictable, shifting, unreliable, erratic\",\n  },\n  { word: \"jargon\", definition: \"Terminology, slang, lingo\" },\n  { word: \"modify\", definition: \"Alteration, change, adjustment\" },\n  { word: \"projection\", definition: \"Outcrop, bulge, forecast, prediction\" },\n  { word: \"slant\", definition: \"Angle, viewpoint, attitude, point of view\" },\n  { word: \"slang\", definition: \"Informal usage, playful language or idioms\" },\n  { word: \"stereotype\", definition: \"Typecast, label\" },\n  {\n    word: \"subordinate\",\n    definition: \"Secondary, lesser, inferior, assistant, junior, underling\",\n  },\n  {\n    word: \"transition\",\n    definition: \"Change, evolution, shift, alteration, transfer\",\n  },\n  { word: \"inflection\", definition: \"Nuance, variation, variety\" },\n  { word: \"collaboration\", definition: \"Teamwork, partnership, group, effort\" },\n  {\n    word: \"clarify\",\n    definition:\n      \"Make clear, explain, spell out, simplify, refine, purify, filter\",\n  },\n  {\n    word: \"exponent\",\n    definition: \"Advocate, supporter, example, model, interpreter, explainer\",\n  },\n  { word: \"ratio\", definition: \"Relation, relative amount, percentage\" },\n  {\n    word: \"proportion\",\n    definition: \"Amount ,quantity, ratio, comparison, relationship\",\n  },\n  {\n    word: \"discord\",\n    definition: \"Disagreement, conflict, dispute, disharmony, friction\",\n  },\n  { word: \"adapt\", definition: \"Version, edition, alteration, change\" },\n  {\n    word: \"approximate\",\n    definition: \"Estimated, fairly accurate, rough, near, ballpark\",\n  },\n  {\n    word: \"transformation\",\n    definition: \"Alteration, change, conversion, renovation\",\n  },\n  {\n    word: \"composition\",\n    definition: \"Create, write, arrange, calm, settle down\",\n  },\n  { word: \"objection\", definition: \"Opposition, protest, doubt\" },\n  {\n    word: \"supported\",\n    definition: \"Hold up, maintain, foundation, encourage, assist, backing\",\n  },\n  { word: \"sequence\", definition: \"Chronological, in order\" },\n  {\n    word: \"maintain\",\n    definition: \"Uphold, preserve, argue, claim, look after, care for\",\n  },\n  {\n    word: \"promote\",\n    definition: \"Endorse, encourage, advance, further advertise, campaign for\",\n  },\n  { word: \"extensive\", definition: \"Widespread, wide-ranging, big, vast\" },\n  { word: \"formal\", definition: \"Procedure, requirement, reserve, stiffness\" },\n];\n","import { shuffle } from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport \"../styles/Jumble.css\";\n\nfunction Jumble({ word, definition }) {\n  const [jumble, setJumble] = useState(\n    shuffle(word.split(\"\")).join(\" \").toUpperCase()\n  );\n\n  useEffect(\n    () => setJumble(shuffle(word.split(\"\")).join(\" \").toUpperCase()),\n    [word]\n  );\n\n  return (\n    <div className=\"center-text\">\n      <h2 className=\"jumble\">{jumble}</h2>\n      <p className=\"hint-text\">{definition}</p>\n    </div>\n  );\n}\n\nexport default Jumble;\n","import \"../styles/BoardInput.css\";\n\nfunction BoardInput({ handleChange, answer, playRound }) {\n  return (\n    <form className=\"board-input\">\n      <input\n        className=\"main-input\"\n        type=\"text\"\n        onChange={handleChange}\n        value={answer}\n      />\n      <div className=\"button-container\">\n        <button onClick={(e) => playRound(e)}>Pass</button>\n        <button onClick={(e) => playRound(e)}>Enter</button>\n      </div>\n    </form>\n  );\n}\n\nexport default BoardInput;\n","import \"../styles/BoardHeader.css\";\n\nfunction BoardHeader({ score }) {\n  return (\n    <div className=\"board-header\">\n      <div className=\"header-cell\">Score: {score}</div>\n      <div className=\"header-cell\">Hint</div>\n      <div className=\"header-cell\">Grade: 5</div>\n    </div>\n  );\n}\n\nexport default BoardHeader;\n","import \"../styles/GameOver.css\";\nimport \"../styles/generalStyles.css\";\n\nfunction GameOver({ score, reset }) {\n  return (\n    <div className=\"game-over\">\n      <h2>Round over! You scored {score} points!</h2>\n      <button onClick={reset} className=\"button replay\">\n        Play Again\n      </button>\n    </div>\n  );\n}\n\nexport default GameOver;\n","import React, { useState } from \"react\";\nimport \"../styles/MainBoard.css\";\nimport _ from \"lodash\";\nimport { wordList } from \"../words/newWords.js\";\nimport Jumble from \"./Jumble\";\nimport BoardInput from \"./BoardInput\";\nimport BoardHeader from \"./BoardHeader\";\nimport GameOver from \"./GameOver\";\n\nfunction MainBoard() {\n  const [words, setWords] = useState(wordList);\n  const [word, setWord] = useState(_.sample(words));\n  const [answer, setAnswer] = useState(\"\");\n  const [score, setScore] = useState(0);\n\n  const handleChange = (e) => {\n    return setAnswer(e.target.value);\n  };\n\n  const playRound = (e) => {\n    e.preventDefault();\n\n    // Probably a better way to do this - don't render the button, or disable it?\n    if (words.length < 1) return;\n\n    if (word.word.toLowerCase() === answer.toLowerCase()) {\n      setScore(score + 1);\n    }\n    // Keep an eye out if this allows a word to repeat a single time\n    // Looks like it probably is\n    setWords(words.filter((entry) => entry.word !== word.word));\n    setWord(_.sample(words));\n    setAnswer(\"\");\n  };\n\n  const reset = () => setWords(wordList);\n\n  const checkGameOver = () => {\n    if (words.length < 1) return <GameOver score={score} reset={reset} />;\n\n    return <Jumble word={word.word} definition={word.definition} />;\n  };\n\n  return (\n    <main className=\"main-board\">\n      <BoardHeader score={score} />\n      {checkGameOver()}\n      <BoardInput\n        handleChange={handleChange}\n        answer={answer}\n        playRound={playRound}\n      />\n    </main>\n  );\n}\n\nexport default MainBoard;\n\n// <React.Fragment>\n// <Jumble word={word} />\n// <BoardInput\n//   handleChange={handleChange}\n//   answer={answer}\n//   playRound={playRound}\n// />\n// </React.Fragment>\n","import React from \"react\";\nimport \"../styles/Footer.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"site-footer\">\n      Made by two mad lads for the Odin Game Jam\n    </footer>\n  );\n}\n\nexport default Footer;\n","import \"./Layout.css\";\nimport Header from \"./components/Header\";\nimport MainBoard from \"./components/MainBoard\";\nimport Footer from \"./components/Footer\";\n\nfunction Layout() {\n  return (\n    <div className=\"Layout\">\n      <Header />\n      <MainBoard />\n      <Footer />\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Layout from \"./Layout\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}