{"version":3,"sources":["components/Header.jsx","words.js","components/MainBoard.jsx","components/Footer.jsx","Layout.js","index.js"],"names":["Header","className","wordList","MainBoard","useState","split","words","setWords","_","sample","word","setWord","answer","setAnswer","score","setScore","jumbledWord","shuffle","join","toUpperCase","playRound","e","preventDefault","console","log","filter","entry","length","type","onChange","target","value","onClick","Footer","Layout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAOeA,MAJf,WACE,OAAO,wBAAQC,UAAU,cAAlB,0B,+BCwEMC,EA5EM,+tBCqENC,MAhEf,WACE,MAA0BC,mBAASF,EAASG,MAAM,OAAlD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBH,mBAASI,IAAEC,OAAOH,IAA1C,mBAAOI,EAAP,KAAaC,EAAb,KAEA,EAA4BP,mBAAS,IAArC,mBAAOQ,EAAP,KAAeC,EAAf,KACA,EAA0BT,mBAAS,GAAnC,mBAAOU,EAAP,KAAcC,EAAd,KAGMC,EAAcR,IAAES,QAAQP,EAAKL,MAAM,KAAKa,KAAK,KAAKC,cAalDC,EAAY,SAACC,GAOjB,GANAA,EAAEC,iBAPFC,QAAQC,IAAId,GACZa,QAAQC,IAAIZ,GACZW,QAAQC,IAAId,IAASE,GACdF,IAASE,GAMdG,EAASD,EAAQ,GAGnBP,EAASD,EAAMmB,QAAO,SAACC,GAAD,OAAWA,IAAUhB,MACvCJ,EAAMqB,OAAS,EACjB,OAAOhB,EAAQ,0BAAD,OAA2BG,EAA3B,aAEhBH,EAAQH,IAAEC,OAAOH,IACjBO,EAAU,KAGZ,OACE,uBAAMZ,UAAU,aAAhB,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,cAAf,oBAAqCa,KACrC,qBAAKb,UAAU,cAAf,kBACA,qBAAKA,UAAU,cAAf,yBAGF,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,SAAd,SAAwBe,IACxB,mBAAGf,UAAU,YAAb,qCAGF,uBAAMA,UAAU,cAAhB,UACE,uBACEA,UAAU,aACV2B,KAAK,OACLC,SA1Ca,SAACR,GACpB,OAAOR,EAAUQ,EAAES,OAAOC,QA0CpBA,MAAOnB,IAET,sBAAKX,UAAU,mBAAf,UACE,wBAAQ+B,QAAS,SAACX,GAAD,OAAOD,EAAUC,IAAlC,kBACA,wBAAQW,QAAS,SAACX,GAAD,OAAOD,EAAUC,IAAlC,6B,MCnDKY,MARf,WACE,OACE,wBAAQhC,UAAU,cAAlB,yDCUWiC,MAVf,WACE,OACE,sBAAKjC,UAAU,SAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCLNkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3f094cac.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/Header.css\";\n\nfunction Header() {\n  return <header className=\"site-header\">Word Jamble</header>;\n}\n\nexport default Header;\n","export const wordList = `abolish\nescalate\ninfluence\naccomplish\nestablish\ninvestigate\naccurate\nevaluate\nnavigate\nannounce\nevidence\nopposed\nanxious\nexhaust\nordinary\napproach\nexpansion\npassage\napproval\nexpectation\npersuade\napproximate\nexplain\nprimary\nargument\nexpress\nrecently\navoid\nextend\nreference\nbriskly\nfamiliar\nreview\ncease\nfrequent\nrevolt\nclaim\ngigantic\nscarce\nconclude\ngist\nsignificant\nconflict\nglare\nsource\nconsistent\nharsh\nsummarize\ncontext\nheroic\nsuperior\nconvince\nhesitat\ntension\nculture\nhilarious\ntolerate\ndecade\nhistoric\ntremble\ndissatisfied\nhorizontal\nunexpected\ndominate\nhostile\nunfamiliar\ndrowsy\nhuddle\nvertical\nedible\nidentify\neffortless\nillegible\nequivalent\nimmigrate`;\n\nexport default wordList;\n","import React, { useState } from \"react\";\nimport \"../styles/MainBoard.css\";\nimport _ from \"lodash\";\nimport wordList from \"../words.js\";\n\nfunction MainBoard() {\n  const [words, setWords] = useState(wordList.split(\"\\n\"));\n  const [word, setWord] = useState(_.sample(words));\n  // const [jumble, setJumble] = _.shuffle(word.split(\"\")).join(\" \").toUpperCase();\n  const [answer, setAnswer] = useState(\"\");\n  const [score, setScore] = useState(0);\n\n  // Find a better way to do this. May be easier with  multiple components\n  const jumbledWord = _.shuffle(word.split(\"\")).join(\" \").toUpperCase();\n\n  const handleChange = (e) => {\n    return setAnswer(e.target.value);\n  };\n\n  const checkAnswer = () => {\n    console.log(word);\n    console.log(answer);\n    console.log(word === answer);\n    return word === answer;\n  };\n\n  const playRound = (e) => {\n    e.preventDefault();\n    if (checkAnswer()) {\n      setScore(score + 1);\n    }\n    // Keep an eye out if this allows a word to repeat a single time\n    setWords(words.filter((entry) => entry !== word));\n    if (words.length < 1)\n      return setWord(`Round over! You scored ${score} points!`);\n\n    setWord(_.sample(words));\n    setAnswer(\"\");\n  };\n\n  return (\n    <main className=\"main-board\">\n      <div className=\"board-header\">\n        <div className=\"header-cell\">Score: {score}</div>\n        <div className=\"header-cell\">Hint</div>\n        <div className=\"header-cell\">Grade: 5</div>\n      </div>\n\n      <div className=\"center-text\">\n        <h2 className=\"jumble\">{jumbledWord}</h2>\n        <p className=\"hint-text\">Text that is jumbled</p>\n      </div>\n\n      <form className=\"board-input\">\n        <input\n          className=\"main-input\"\n          type=\"text\"\n          onChange={handleChange}\n          value={answer}\n        />\n        <div className=\"button-container\">\n          <button onClick={(e) => playRound(e)}>Pass</button>\n          <button onClick={(e) => playRound(e)}>Enter</button>\n        </div>\n      </form>\n    </main>\n  );\n}\n\nexport default MainBoard;\n","import React from \"react\";\nimport \"../styles/Footer.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"site-footer\">\n      Made by two mad lads for the Odin Game Jam\n    </footer>\n  );\n}\n\nexport default Footer;\n","import \"./Layout.css\";\nimport Header from \"./components/Header\";\nimport MainBoard from \"./components/MainBoard\";\nimport Footer from \"./components/Footer\";\n\nfunction Layout() {\n  return (\n    <div className=\"Layout\">\n      <Header />\n      <MainBoard />\n      <Footer />\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Layout from \"./Layout\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}