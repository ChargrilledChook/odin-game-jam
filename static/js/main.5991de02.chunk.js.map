{"version":3,"sources":["components/Header.jsx","words.js","components/Jumble.jsx","components/MainBoard.jsx","components/Footer.jsx","Layout.js","index.js"],"names":["Header","className","wordList","Jumble","word","useState","shuffle","split","join","toUpperCase","jumble","setJumble","useEffect","MainBoard","words","setWords","_","sample","setWord","answer","setAnswer","score","setScore","playRound","e","preventDefault","toLowerCase","filter","entry","length","type","onChange","target","value","onClick","Footer","Layout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAOeA,MAJf,WACE,OAAO,wBAAQC,UAAU,cAAlB,0B,+BCwEMC,EA5EM,+tB,MCsBNC,MAlBf,YAA2B,IAATC,EAAQ,EAARA,KAChB,EAA4BC,mBAC1BC,kBAAQF,EAAKG,MAAM,KAAKC,KAAK,KAAKC,eADpC,mBAAOC,EAAP,KAAeC,EAAf,KASA,OALAC,qBACE,kBAAMD,EAAUL,kBAAQF,EAAKG,MAAM,KAAKC,KAAK,KAAKC,iBAClD,CAACL,IAID,sBAAKH,UAAU,cAAf,UACE,oBAAIA,UAAU,SAAd,SAAwBS,IACxB,mBAAGT,UAAU,YAAb,sCCuCSY,MAlDf,WACE,MAA0BR,mBAASH,EAASK,MAAM,OAAlD,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAAwBV,mBAASW,IAAEC,OAAOH,IAA1C,mBAAOV,EAAP,KAAac,EAAb,KACA,EAA4Bb,mBAAS,IAArC,mBAAOc,EAAP,KAAeC,EAAf,KACA,EAA0Bf,mBAAS,GAAnC,mBAAOgB,EAAP,KAAcC,EAAd,KAMMC,EAAY,SAACC,GAOjB,GANAA,EAAEC,iBACErB,IAASe,EAAOO,eAClBJ,EAASD,EAAQ,GAGnBN,EAASD,EAAMa,QAAO,SAACC,GAAD,OAAWA,IAAUxB,MACvCU,EAAMe,OAAS,EACjB,OAAOX,EAAQ,0BAAD,OAA2BG,EAA3B,aAEhBH,EAAQF,IAAEC,OAAOH,IACjBM,EAAU,KAGZ,OACE,uBAAMnB,UAAU,aAAhB,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,cAAf,oBAAqCoB,KACrC,qBAAKpB,UAAU,cAAf,kBACA,qBAAKA,UAAU,cAAf,yBAGF,cAAC,EAAD,CAAQG,KAAMA,IAEd,uBAAMH,UAAU,cAAhB,UACE,uBACEA,UAAU,aACV6B,KAAK,OACLC,SAhCa,SAACP,GACpB,OAAOJ,EAAUI,EAAEQ,OAAOC,QAgCpBA,MAAOd,IAET,sBAAKlB,UAAU,mBAAf,UACE,wBAAQiC,QAAS,SAACV,GAAD,OAAOD,EAAUC,IAAlC,kBACA,wBAAQU,QAAS,SAACV,GAAD,OAAOD,EAAUC,IAAlC,6B,MCtCKW,MARf,WACE,OACE,wBAAQlC,UAAU,cAAlB,yDCUWmC,MAVf,WACE,OACE,sBAAKnC,UAAU,SAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCLNoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5991de02.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/Header.css\";\n\nfunction Header() {\n  return <header className=\"site-header\">Word Jamble</header>;\n}\n\nexport default Header;\n","export const wordList = `abolish\nescalate\ninfluence\naccomplish\nestablish\ninvestigate\naccurate\nevaluate\nnavigate\nannounce\nevidence\nopposed\nanxious\nexhaust\nordinary\napproach\nexpansion\npassage\napproval\nexpectation\npersuade\napproximate\nexplain\nprimary\nargument\nexpress\nrecently\navoid\nextend\nreference\nbriskly\nfamiliar\nreview\ncease\nfrequent\nrevolt\nclaim\ngigantic\nscarce\nconclude\ngist\nsignificant\nconflict\nglare\nsource\nconsistent\nharsh\nsummarize\ncontext\nheroic\nsuperior\nconvince\nhesitat\ntension\nculture\nhilarious\ntolerate\ndecade\nhistoric\ntremble\ndissatisfied\nhorizontal\nunexpected\ndominate\nhostile\nunfamiliar\ndrowsy\nhuddle\nvertical\nedible\nidentify\neffortless\nillegible\nequivalent\nimmigrate`;\n\nexport default wordList;\n","import { shuffle } from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport \"../styles/Jumble.css\";\n\nfunction Jumble({ word }) {\n  const [jumble, setJumble] = useState(\n    shuffle(word.split(\"\")).join(\" \").toUpperCase()\n  );\n\n  useEffect(\n    () => setJumble(shuffle(word.split(\"\")).join(\" \").toUpperCase()),\n    [word]\n  );\n\n  return (\n    <div className=\"center-text\">\n      <h2 className=\"jumble\">{jumble}</h2>\n      <p className=\"hint-text\">Text that is jumbled</p>\n    </div>\n  );\n}\n\nexport default Jumble;\n","import { useState } from \"react\";\nimport \"../styles/MainBoard.css\";\nimport _ from \"lodash\";\nimport wordList from \"../words.js\";\nimport Jumble from \"./Jumble\";\n\nfunction MainBoard() {\n  const [words, setWords] = useState(wordList.split(\"\\n\"));\n  const [word, setWord] = useState(_.sample(words));\n  const [answer, setAnswer] = useState(\"\");\n  const [score, setScore] = useState(0);\n\n  const handleChange = (e) => {\n    return setAnswer(e.target.value);\n  };\n\n  const playRound = (e) => {\n    e.preventDefault();\n    if (word === answer.toLowerCase()) {\n      setScore(score + 1);\n    }\n    // Keep an eye out if this allows a word to repeat a single time\n    setWords(words.filter((entry) => entry !== word));\n    if (words.length < 1)\n      return setWord(`Round over! You scored ${score} points!`);\n\n    setWord(_.sample(words));\n    setAnswer(\"\");\n  };\n\n  return (\n    <main className=\"main-board\">\n      <div className=\"board-header\">\n        <div className=\"header-cell\">Score: {score}</div>\n        <div className=\"header-cell\">Hint</div>\n        <div className=\"header-cell\">Grade: 5</div>\n      </div>\n\n      <Jumble word={word} />\n\n      <form className=\"board-input\">\n        <input\n          className=\"main-input\"\n          type=\"text\"\n          onChange={handleChange}\n          value={answer}\n        />\n        <div className=\"button-container\">\n          <button onClick={(e) => playRound(e)}>Pass</button>\n          <button onClick={(e) => playRound(e)}>Enter</button>\n        </div>\n      </form>\n    </main>\n  );\n}\n\nexport default MainBoard;\n","import React from \"react\";\nimport \"../styles/Footer.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"site-footer\">\n      Made by two mad lads for the Odin Game Jam\n    </footer>\n  );\n}\n\nexport default Footer;\n","import \"./Layout.css\";\nimport Header from \"./components/Header\";\nimport MainBoard from \"./components/MainBoard\";\nimport Footer from \"./components/Footer\";\n\nfunction Layout() {\n  return (\n    <div className=\"Layout\">\n      <Header />\n      <MainBoard />\n      <Footer />\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Layout from \"./Layout\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}